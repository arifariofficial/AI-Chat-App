pipeline {
    agent any
    triggers {
        GenericTrigger(
            genericVariables: [
                [key: 'DOCKER_REPO', value: '$.repository.repo_name']
            ],
            causeString: 'Triggered by Docker Hub webhook: $DOCKER_REPO',
            printContributedVariables: true,
            printPostContent: true
        )
    }

    parameters {
        string(name: 'PROJECT_PATH', defaultValue: '/home/sipeai8/sipe-frontend', description: 'Path to the project')
        string(name: 'BRANCH', defaultValue: 'ai-sdk', description: 'Branch to deploy')
    }

    stages {
        stage('Prepare') {
            steps {
                script {
                    echo "Navigating to project path: ${params.PROJECT_PATH}"
                    sh "cd ${params.PROJECT_PATH}"
                }
            }
        }

        stage('Deploy Docker Image') {
            steps {
                script {
                    sh '''
                        set -e
                        echo "Checking out branch: ${BRANCH}"
                        git fetch origin ${BRANCH}:${BRANCH}
                        git checkout ${BRANCH}
                        git pull origin ${BRANCH}

                        echo "Logging into Docker using Jenkins-managed credentials"
                        docker login registry.hub.docker.com

                        echo "Stopping existing containers"
                        docker compose down

                        echo "Pulling updated Docker images"
                        docker compose pull frontend

                        echo "Cleaning up unused Docker resources"
                        docker image prune --filter "label=project=sipe-frontend" -f

                        echo "Starting updated containers"
                        docker compose up -d

                        echo "Displaying logs for frontend service"
                        docker logs sipe-frontend-frontend-1
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "Deployment completed successfully."
            script {
                sh 'docker ps -a'
            }
        }
        failure {
            echo "Deployment failed. Check the logs for details."
        }
    }
}
